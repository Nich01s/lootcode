
「线段树」：
    线段数是一种平衡二叉搜索树，主要用于维护区间信息（要求满足结合律），如区间求和，乘积等操作，时间复杂度为O(logN)；
    线段树的一些特征：
       线段树一般使用数组存储。每子节点 p 的左右子结点编号分别为 2p 和 2p+1，假设节点p存储的是区间 [a,b] 的和，设 mid = [l+r]/2，
    那么两个子节点分别存储 [l,mid]和 [mid+1,r] 的和。

「线段树的建立」[递归]：
    int[] tree = new int[n+1];//用于存储线段树的数组，从下标1开始
    void build (int l = 1, int r = n, int p = 1){ //p为当前节点编号
        if(l == r){
            tree[p] = A[l];//线段是的叶子节点存储的是数组中的某个下标值
        }else{
            int mid = (l + r) / 2;
            build(l, mid, p * 2);//建立左子树
            build(mid + 1, r, p * 2 + 1);//建立右子树
            tree[p] = tree[p * 2] + tree[p * 2 + 1];//线段树的任一节点的值等于左右子结点之和
        }
    }








「线段树模板题」：
    洛谷P3372[线段树]